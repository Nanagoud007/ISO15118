ISO 15118 Message Flows
ISO 15118‑2 (2014) – AC/DC Charging Sessions
ISO 15118‑2 defines a fixed sequence of XML/EXI message pairs between the EV (EVCC) and charger
(SECC) for AC or DC charging. Key message exchanges are:
• SupportedAppProtocolReq/Res: Initial handshake. The EV and EVSE negotiate a common
ISO 15118 protocol version 1 .
• SessionSetupReq/Res: The EV starts a new charging session. The SECC assigns a session ID
(allowing future pause/resume of this session) 2 .
• ServiceDiscoveryReq/Res: The EV asks the SECC which services it offers (e.g. single‑ or
three‑phase AC, DC modes, authentication methods, value-added services). The SECC replies
with available ServiceID(s) 3 . An optional ServiceDetailReq/Res lets the EV request
human‑readable details for each service.
• PaymentServiceSelectionReq/Res: The EV tells the SECC its chosen payment/charging mode
(e.g. “Contract” for Plug&Charge or “External” for RFID) and any selected value‑added services
4 .
• CertificateInstallationReq/Res: (Plug&Charge only) If the EV lacks a valid contract certificate (or
its certificate has expired), the EV sends a CertificateInstallationReq to fetch its contract
certificate from the SECC 5 .
• CertificateUpdateReq/Res: (Plug&Charge) If the EV’s contract certificate is nearing expiry, it
may send CertificateUpdateReq to obtain a new one 6 .
• PaymentDetailsReq/Res: (Plug&Charge) The EV presents its contract certificate (and any
credentials) so that the SECC can authenticate and authorize the driver 7 .
• AuthorizationReq/Res: The EV requests authorization to charge (e.g. to guard against replay
attacks). The SECC verifies the EV’s certificate/credentials and responds with accept/reject 8 .
Once identity and payment are settled, the EV and SECC negotiate charging parameters:
• ChargeParameterDiscoveryReq/Res: The EV sends its charging needs and limits (desired
energy, departure time, min/max voltage/current). The SECC sends back an agreed charging
schedule (maximum allowed power profile, optional tariff info) 9 .
• CableCheckReq/Res: (DC only) The EV asks the SECC to perform a safety check (verifying
connector lock, EV readiness, etc.) 10 .
• PreChargeReq/Res: (DC only) The EV requests the SECC to apply a small “pre‑charge” voltage to
match the battery voltage. The SECC responds with its status and output voltage 11 .
• PowerDeliveryReq/Res: The EV sends PowerDeliveryReq to request power-up and to transmit
its ChargingProfile (charging schedule/limits). The SECC replies with PowerDeliveryRes indicating
whether it can begin power transfer 12 . This message effectively starts the DC charging. (For
AC, a similar PowerDeliveryReq/Res starts AC charging).
During charging:
• DC CurrentDemandReq/Res: (DC charging) The EV periodically sends CurrentDemandReq with
its requested current; the SECC replies with CurrentDemandRes including actual output current/
voltage. This loop continues until charging completes 13 .
1• AC ChargingStatusReq/Res: (AC charging) The EV and SECC periodically exchange
ChargingStatusReq/Res messages carrying meter readings (power, energy). This allows the EV to
verify the energy drawn and the SECC to authorize metering. Along with this, the EV issues a
signed MeteringReceiptReq/Res for each cycle to acknowledge meter data 14 . This signed
receipt ensures the EV has received the meter info (SessionID, SAScheduleTupleID, energy) for
billing purposes 15 .
End-of-session messages:
• PowerDeliveryReq (ChargeProgress=Stop): When charging is complete or paused (EV reaches
target SoC or user interrupts), the EV sends another PowerDeliveryReq with
ChargeProgress=Stop to signal stopping power 16 .
• WeldingDetectionReq/Res: (Optional) The EV may request the SECC to perform welding
detection to ensure the EV contactor didn’t accidentally weld closed 17 .
• SessionStopReq/Res: The EV formally ends the session. The ChargingSession flag can be
“Terminate” or “Pause”. The SECC replies indicating success. If paused, the SECC preserves
charging parameters to resume later 18 19 .
Each of these message pairs above (Req/Res) is defined in ISO 15118‑2 with specific XML payload fields
(e.g. VehicleID, CertificateChain, ChargingProfile, MeterInfoRecord, etc.) and exact semantics. For
brevity the above list highlights their purpose (full field definitions are in the standard 1 14 ).
ISO 15118‑2 (AC vs. DC Differences)
Most messages above are common to AC and DC. In DC charging, the CableCheck and PreCharge steps
are mandatory (IEC 61851 safety). In AC charging, there is no PLC cable test or precharge; instead the
SECC typically switches on AC voltage immediately after authorization. AC charging uses the same
SupportedAppProtocol, SessionSetup, ServiceDiscovery, etc., and the EV still sends a PowerDeliveryReq
to start current, but control is via the ChargingStatus/MeteringReceipt loop rather than CurrentDemand
14 . (In other words, DC uses a current setpoint loop, while AC uses metering feedback.) All sessions
(AC or DC) end with PowerDelivery(Stop) and SessionStop messages 19 .
ISO 15118‑20 (2022) – Next‑Gen AC/DC/Bidirectional
ISO 15118‑20 extends 15118‑2 for bidirectional charging (V2G), wireless, dynamic control, etc. Its
message flows are similar but with some new messages and prefixes. For a DC charging (BPT) session,
the sequence is:
• SupportedAppProtocolReq/Res & SessionSetupReq/Res: (Same as –2) agree version and start
session 20 .
• AuthorizationSetupReq/Res: New in –20. The EV sends an (empty) AuthorizationSetupReq to
discover available authorization modes; the SECC replies with which modes it supports and
whether certificate installation is offered 21 .
• AuthorizationReq/Res: The EV requests charging authorization (e.g. presenting its certificate
challenge). The SECC validates and responds whether charging is approved 22 . (In PnC, this
ensures certificates and signatures are valid.)
• ServiceDiscoveryReq/Res: The EV asks the SECC what services (charging modes) are available.
The SECC replies with a list of services (identifiers) 23 .
• ServiceDetailReq/Res: The EV can ask for detailed info on any offered service (e.g. maximum
power, payment requirements). The SECC returns details for each requested ServiceID 24 .
2• ServiceSelectionReq/Res: The EV tells the SECC which ServiceID(s) it chooses (e.g. DC charging
with BPT enabled) and any parameter sets for those services. The SECC acknowledges the
selection 25 .
Now power-transfer negotiation:
• DC_ChargeParameterDiscoveryReq/Res: The EV provides its own DC charging parameters (e.g.
max/min voltage and current for charge and discharge) to the SECC. The SECC replies with the
parameters from the grid side (e.g. maximum available power schedule) 26 .
• ScheduleExchangeReq/Res: After basic limits, this new exchange lets the EV and SECC share
more detailed parameters like departure time, target SoC, and receive a proposed power
schedule from the SECC. The EV sends its preferences in ScheduleExchangeReq; the SECC
responds with applicable schedule(s) 27 .
• DC_CableCheckReq/Res: (Same purpose as –2) The EV requests a DC cable check; the SECC
replies with safety status (connector locked, insulation, etc.) 28 .
• DC_PreChargeReq/Res: (Same as –2) EV requests pre‑charge; SECC responds with status and
output voltage 29 .
• PowerDeliveryReq/Res: The EV sends PowerDeliveryReq to start actual power transfer,
including its ChargingProfile for the session. The SECC replies to confirm power-on 30 .
During charging (in charging loop):
• DC_ChargeLoopReq/Res: (Replaces –2’s CurrentDemand) The EV regularly sends
DC_ChargeLoopReq with the current setpoint it now requests; SECC replies with
DC_ChargeLoopRes giving actual current/voltage. This loop continues until charging is finished
31 .
End-of-session messages:
• DC_WeldingDetectionReq/Res: (Same concept as –2) The EV may request welding detection;
SECC responds with status 32 .
• SessionStopReq/Res: The EV requests session termination (or pause) as before. The SECC
responds whether it has successfully ended energy transfer 33 .
ISO 15118‑20 does not explicitly list AC‑specific message names in the Typhoon summary, but in
practice AC charging uses the same flow (with messages named AC_ChargeParameterDiscovery,
AC_CableCheck, etc.) and similarly supports bidirectional AC flow. Wireless power transfer (WPT) and
Automated Connection Device (ACD) modes are also handled as “services” discovered in the
ServiceDiscovery phase.
Each of the above –20 messages has detailed payload fields defined in ISO 15118‑20 (e.g. BPT-specific
parameters in ChargeParameterDiscovery, etc.) 20 26 . The overall flow (SupportedAppProtocol,
SessionSetup, Authorization, ServiceDiscovery/Selection, ChargeParamDiscovery, ScheduleExchange,
CableCheck/PreCharge, PowerDelivery, ChargeLoop, WeldingDetection, SessionStop) thus generalizes
the –2 sequence for V2G use cases.
3ISO 15118 ↔ OCPP Message Mappings
ISO 15118 is the in‑vehicle interface, whereas OCPP is the charge‑point ↔ central system protocol. In
practice, many ISO 15118 (Plug&Charge) flows are carried over OCPP 2.0.1 using DataTransfer and
special message types. Key correspondences include 34 35 36 :
• Authorize (OCPP) – Used for EV authentication during Plug&Charge. In ISO 15118, the EVCC’s
AuthorizationReq/Res messages lead the charge point to send an OCPP Authorize.req (often
wrapped in DataTransfer) to the central system 34 . The Central System replies with
Authorize.conf (or rejects).
• Get15118EVCertificate (OCPP) – The charge point forwards the ISO 15118
CertificateInstallationReq (from the EV) to the Central System via OCPP. The
Get15118EVCertificate.req message’s exiRequest field contains the EXI‑encoded
CertificateInstallationReq (Base64) 35 . The Central System responds with
Get15118EVCertificate.conf, carrying the EXI‑encoded CertificateInstallationRes.
• InstallCertificate (OCPP) – The Central System’s way to deliver a new certificate to the EVSE. For
example, when the EV needs a new contract or root certificate, the CSMS sends
InstallCertificate.req to the charge point 36 . The EVSE processes it and replies
InstallCertificate.conf. ISO 15118’s CertificateInstallation/Update payloads are thus conveyed
through this OCPP message.
• SignCertificate / CertificateSigned (OCPP) – When the EV generates a Certificate Signing
Request (CSR) and needs it signed (ISO 15118 CertificationInstallation/Update flows), OCPP
SignCertificate.req is used. The Central CA signs the CSR and returns the signed certificate in a
CertificateSigned.req, which the CSMS wraps in OCPP to send back to the EVSE 34 .
• GetCertificateStatus, GetInstalledCertificateIds, DeleteCertificate (OCPP) – Used to check or
manage certificate revocation/status in OCPP; these are used as needed during ISO 15118 flows
(e.g. CSMS can ask the EVSE for the status of its certificates) 34 .
• TriggerMessage (OCPP) – Can be used by the central system to prompt the charge point to
initiate certain actions (e.g. asking the EVSE to start an ISO 15118 session or check a certificate)
34 .
In summary, ISO 15118 message exchanges (authentication, certificate installation, charging
negotiation) are encapsulated in OCPP 2.0.1 operations. For example, an ISO 15118
CertificateInstallationReq from the EV will cause the EVSE to call Get15118EVCertificate on the central
system, and the received certificate is then sent via InstallCertificate back to the EVSE 36 35 . Likewise,
OCPP’s Authorize (with the EV’s eMAID or challenge data) is used to handle the ISO 15118 Authorization
step 34 .
Sources: ISO 15118‑2 and ‑20 message sequences and purposes are documented in the ISO standards
and summarized in industry references 1 20 . The above descriptions are based on those
specifications. The OCPP mappings are taken from the OCPP 2.0.1 (Plug&Charge) documentation 34
35
36 . Each cited source provides full message definitions and XML schema for the fields mentioned.
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
ISO 15118-2 Protocol
https://www.typhoon-hil.com/documentation/typhoon-hil-software-manual/References/iso15118_protocol.html
20
21
22
23
24
25
26
27
28
29
30
31
32
33
ISO 15118-20 Protocol
https://www.typhoon-hil.com/documentation/typhoon-hil-software-manual/References/iso_15118_20_protocol.html
34
35
36
Using ISO 15118 Plug & Charge with OCPP 1.6
https://openchargealliance.org/wp-content/uploads/2023/11/ocpp_1_6_ISO_15118_v10.pdf
4
